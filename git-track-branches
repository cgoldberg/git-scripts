#!/usr/bin/env bash
#
# Corey Goldberg (https://github.com/cgoldberg)
#
# git-track-branches - create a local tracking branch for every remote branch
#
# usage:
#  - add this script to a directory on your PATH
#  - make this script executable (chmod +x git-track-branches)
#  - run 'git track-branches' from any directory in a local git repo

die() {
    tput setaf 1; echo -en "\u2717 "; tput sgr0
    tput bold; echo "$*" 1>&2; tput sgr0
    exit 1
}

if [ ! -x "$(command -v git)" ]; then
    die "fatal: can't find git"
fi

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    die "fatal: not a git repository"
fi

git fetch --prune --verbose
echo

default_branch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's/.*\///')
remote_branches_without_default=( $(git branch --all --no-color | grep remotes | grep -v "${default_branch}") )

if [ ${#remote_branches_without_default[@]} -eq 0 ]; then
    die "no remote branches to track (only '${default_branch}' exists)"
fi

for remote_branch in ${remote_branches_without_default[@]}; do
    branch="${remote_branch#remotes/origin/}"
    git branch --track "${branch}" "${remote_branch}" 2>&1 | grep -v "already exists"
done

echo
tput setaf 10; echo -en "\u2714  "; tput sgr0
echo "done creating local tracking branches"
