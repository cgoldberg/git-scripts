#!/usr/bin/env bash
#
# Corey Goldberg (https://github.com/cgoldberg)
#
# git-clean-untracked - delete untracked files and directories with confirmation
#
# usage/examples:
#  - $ git clean-untracked (excluding ignored files)
#  - $ git clean-untracked -a (including ignored files)
#  - $ git clean-untracked -i (only ignored files)
#  - $ git clean-untracked -f (no confirmation)
#
# instructions:
#  - add this script to a directory on your PATH
#  - make this script executable (chmod +x git-clean-untracked)
#  - run 'git clean-untracked' from any directory in a local git repo

set -e

die () {
    tput bold; tput setaf 1; echo -en "\u2717 " 1>&2; tput sgr0
    tput bold; echo "$*" 1>&2; tput sgr0
    exit 1
}

ok () {
    tput bold; tput setaf 10; echo -en "\u2714  " 1>&2; tput sgr0
    tput bold; echo "$*" 1>&2; tput sgr0
}

while getopts ":afih" opt; do
    case "${opt}" in
        a )
            OPT_ALL_FILES="true"
            ;;
        f )
            OPT_NO_CONFIRM="true"
            ;;
        i )
            OPT_ONLY_IGNORED_FILES="true"
            ;;
        h )
            echo -e "delete untracked files and directories\n\n"\
                "options:\n"\
                " -a : include ignored files\n"\
                " -f : no confirmation\n"\
                " -i : only ignored files\n"\
                " -h : show this help message"
            exit
            ;;
        \? )
            die "invalid option"
            ;;
    esac
done

if [ ! -x "$(command -v git)" ]; then
    die "fatal: can't find git"
fi

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    die "fatal: not a git repository"
fi

if [ -n "${OPT_ALL_FILES}" ]; then
    cmd="git clean -d -x --force"
    echo "selecting untracked files (including ignored files)"
elif [ -n "${OPT_ONLY_IGNORED_FILES}" ]; then
    cmd="git clean -d -X --force"
    echo "selecting untracked files (only ignored files)"
else
    cmd="git clean -d --force"
    echo "selecting untracked files (excluding ignored files)"
fi
echo

files_to_remove=$(eval "${cmd} --dry-run")

if [ -z "${files_to_remove}" ]; then
    die "no untracked files"
fi

echo "command: ${cmd}"
echo
tput setaf 1; echo "${files_to_remove}"; tput sgr0

if [ -n "${OPT_NO_CONFIRM}" ]; then
    echo
    eval "${cmd}"
    echo
    ok "done cleaning files"
else
    echo
    echo "proceed?"
    echo
    select result in "yes" "no"; do
        if [ "${result}" == "yes" ]; then
            echo
            eval "${cmd}"
            echo
            ok "done cleaning files"
        fi
        break
    done
fi
